{
	"info": {
		"_postman_id": "6266f327-04f3-4c88-a3fc-4fbae2c8eda3",
		"name": "Authorization",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "27375154"
	},
	"item": [
		{
			"name": "sign-up(new student)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User was created\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Message Validation\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User was created\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"{{studentEmail}}\",\r\n  \"name\": \"{{studentName}}\",\r\n  \"password\": \"{{studentPassword}}\",\r\n  \"group\": \"{{groupCode}}\"\r\n}\r\n\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{stageUrl}}/sign-up"
			},
			"response": []
		},
		{
			"name": "user data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"studentId\", jsonData[0].id);",
							"pm.environment.set(\"activationCode\", jsonData[0].activationCode);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/users?_where=(email,eq,{{studentEmail}})",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "_where",
							"value": "(email,eq,{{studentEmail}})"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "sign-in(non active user)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 421\", function () {",
							"    pm.response.to.have.status(421);",
							"});",
							"",
							"pm.test(\"Error message validation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"Authentication failed. User was not activated\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"{{studentEmail}}\",\n  \"password\": \"{{studentPassword}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://ask-stage.portnov.com/api/v1/sign-in"
			},
			"response": []
		},
		{
			"name": "forgot-password(not-activated user)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 421\", function () {",
							"    pm.response.to.have.status(421);",
							"});",
							"",
							"pm.test(\"Error Message validation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"Authentication failed. User was not activated\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"{{studentEmail}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{stageUrl}}/forgot-password"
			},
			"response": []
		},
		{
			"name": "reset-password(not-activated user)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 421\", function () {\r",
							"    pm.response.to.have.status(421);\r",
							"});\r",
							"pm.test(\"Error Message Validation\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Authentication failed. User was not activated\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"password\": \"myNewPassword\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{stageUrl}}/reset-password/{{studentId}}/{{activationCode}}"
			},
			"response": []
		},
		{
			"name": "activate user with invalid activation code",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 423\", function () {",
							"    pm.response.to.have.status(423);",
							"});",
							"",
							"pm.test(\"Message validation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"Activation failed. Activation code mismatch\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{stageUrl}}/activate/{{studentId}}/{{activationCode}}\"1\""
			},
			"response": []
		},
		{
			"name": "activate user account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Message validation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"User was activated\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{stageUrl}}/activate/{{studentId}}/{{activationCode}}"
			},
			"response": []
		},
		{
			"name": "activate activated user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 422\", function () {",
							"    pm.response.to.have.status(422);",
							"});",
							"",
							"pm.test(\"Error Message validation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"Activation failed. User not found or has already been activated\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{stageUrl}}/activate/{{studentId}}/{{activationCode}}"
			},
			"response": []
		},
		{
			"name": "sign-up(existing student)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User was created\", function () {\r",
							"    pm.response.to.have.status(420);\r",
							"});\r",
							"pm.test(\"Error message Validation\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User already exists and activated\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"{{studentEmail}}\",\r\n  \"name\": \"{{studentName}}\",\r\n  \"password\": \"{{studentPassword}}\",\r\n  \"group\": \"{{groupCode}}\"\r\n}\r\n\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{stageUrl}}/sign-up"
			},
			"response": []
		},
		{
			"name": "sign-in(valid credentials)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"User's role is a STUDENT\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.user.role).to.eql(\"STUDENT\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"{{studentEmail}}\",\n  \"password\": \"{{studentPassword}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{stageUrl}}/sign-in"
			},
			"response": []
		},
		{
			"name": "sign-in (invalid credentials)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Message validation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"Authentication failed. User not found or password does not match\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"{{studentEmail}}\",\n  \"password\": \"A{{studentPassword}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{stageUrl}}/sign-in"
			},
			"response": []
		},
		{
			"name": "reset-password(was not called)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 424\", function () {\r",
							"    pm.response.to.have.status(424);\r",
							"});\r",
							"pm.test(\"Message Validation\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Error. Reset was not requested\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"password\": \"myNewPassword\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{stageUrl}}/reset-password/{{studentId}}/{{activationCode}}"
			},
			"response": []
		},
		{
			"name": "forgot-password(valid email)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Message validation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"Reset password email was sent\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"{{studentEmail}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{stageUrl}}/forgot-password"
			},
			"response": []
		},
		{
			"name": "forgot-password(invalid email)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Error Message validation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"Authentication failed. User not found or password does not match\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"D{{studentEmail}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{stageUrl}}/forgot-password"
			},
			"response": []
		},
		{
			"name": "user data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"studentId\", jsonData[0].id);",
							"pm.environment.set(\"activationCode\", jsonData[0].activationCode);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/users?_where=(email,eq,{{studentEmail}})",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "_where",
							"value": "(email,eq,{{studentEmail}})"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "reset-password(invalid activation code)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 423\", function () {\r",
							"    pm.response.to.have.status(423);\r",
							"});\r",
							"pm.test(\"Error Message Validation\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Activation failed. Activation code mismatch\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"password\": \"myNewPassword\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{stageUrl}}/reset-password/{{studentId}}/{{activationCode}}1"
			},
			"response": []
		},
		{
			"name": "reset-password(valid user)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Message Validation\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Password was changed\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"password\": \"myNewPassword\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{stageUrl}}/reset-password/{{studentId}}/{{activationCode}}"
			},
			"response": []
		},
		{
			"name": "sign-in (teacher)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"teacherToken\", jsonData.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"teacher@gmail.com\",\n  \"password\": \"12345Abc\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{stageUrl}}/sign-in"
			},
			"response": []
		},
		{
			"name": "delete student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{teacherToken}}"
					}
				},
				"method": "DELETE",
				"header": [],
				"url": "{{stageUrl}}/users/{{studentId}}"
			},
			"response": []
		}
	]
}